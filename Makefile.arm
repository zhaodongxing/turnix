KERNEL := turnix
CROSS_COMPILE ?= arm-none-eabi-
CFLAGS = -fno-common -ffreestanding -O0 -std=gnu99 \
	 -gdwarf-2 -g3 -Wall -Werror \
	 -mcpu=cortex-m3 -mthumb \
	 -Wl,-Tos.ld -nostartfiles -Iinclude\

LDFLAGS += -T armlink.ld 
CC := ${CROSS_COMPILE}gcc
LD := ${CROSS_COMPILE}ld
AS := ${CROSS_COMPILE}as
NM := ${CROSS_COMPILE}nm
OBJDUMP := ${CROSS_COMPILE}objdump
READELF := ${CROSS_COMPILE}readelf
QEMU := qemu-system-arm
GDB := gdb
SIZE := ${CROSS_COMPILE}size
STRIP := ${CROSS_COMPILE}strip
SHELL := /bin/bash
APPLICATION ?= applications/shell.o
#export SHELLOPTS := errexit:pipefail
export SHELLOPTS := errexit

include Config.mk

ASMOBJS = 
COBJS = kernel/os.o kernel/startup.o kernel/malloc.o kernel/threads.o 
DEPS = $(COBJS:.o=.d)
OBJS = ${ASMOBJS} ${COBJS}

.DELETE_ON_ERROR:

.PHONY: all qemu dump gdb loc clean cscope tags size strip

all: ${KERNEL}.bin

${KERNEL}.bin: ${KERNEL}.elf
	$(CROSS_COMPILE)objcopy -Obinary ${KERNEL}.elf ${KERNEL}.bin
	$(CROSS_COMPILE)objdump -S ${KERNEL}.elf > ${KERNEL}.list

${KERNEL}.elf: ${OBJS} armlink.ld
	$(LD) -o $@ $(filter %.o,$^) ${LDFLAGS}

.c.o:
	$(CC) -c -o $@ $< ${CFLAGS}

.S.o:
	$(CC) -c -o $@ $< ${CFLAGS}

kernel/isr.o: include/irq.h include/config.h

kernel/idt.o: include/irq.h

include/irq.h: gen_irq.sh
	./gen_irq.sh > $@

kernel/idt.d: include/irq.h

%.o: %.c %.d

%.d: %.c include/config.h
	$(CC) -M $< ${CFLAGS} | \
		sed -e 's;^\(.*\)\.o\(.*\);$(@D)/\1.o $(@D)/\1.d\2;' > $@

include/config.h: Config.mk
	$(shell echo "/* DO NOT EDIT IT */" >$@)
	$(shell echo "#ifndef CONFIG_H" >>$@)
	$(shell echo "#define CONFIG_H" >>$@)
	$(foreach cfg,$(filter CONFIG_%,${.VARIABLES}),$(shell echo '#define $(cfg) $($(cfg))' >>$@))
	$(shell echo "#endif  /* CONFIG_H */" >>$@)

-include $(DEPS)

qemu: ${KERNEL}.elf
	$(QEMU) -M stm32-p103 -nographic -kernel ${KERNEL}.bin

dump: ${KERNEL}.elf
	$(OBJDUMP) -d ${KERNEL}.elf | less

gdb: ${KERNEL}.elf
	$(QEMU) -s -S -kernel ${KERNEL}.elf &
	$(GDB) ${KERNEL}.elf -ex 'target remote 127.0.0.1:1234'

loc:
	find . -name '*.[hcS]' | xargs wc -l | sort -n

tags:
	ctags -R

cscope:
	find . -name '*.[hcS]' > cscope.files
	cscope -bk

size: ${KERNEL}.elf
	@$(SIZE) -A ${KERNEL}.elf

strip: ${KERNEL}.elf
	$(STRIP) -R .comment -g ${KERNEL}.elf

clean:
	$(RM) ${OBJS} ${DEPS}
	$(RM) *.iso *.elf *.sym
	$(RM) -r iso
	$(RM) include/irq.h
	$(RM) include/config.h
